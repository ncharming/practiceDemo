package Thread;

public class YieldDemo {
    /**
     * public static native void yield();
     * 这是一个静态方法，一旦执行，它会是当前线程让出CPU，但是，需要注意的是，让出的CPU并不是代表当前线程不再运行了，
     * 如果在下一次竞争中，又获得了CPU时间片当前线程依然会继续运行。另外，让出的时间片只会分配给当前线程相同优先级的线程
     */
    //sleep 和 yield 的区别
    /**
     * sleep()和yield()方法，同样都是当前线程会交出处理器资源，
     * 而它们不同的是，sleep()交出来的时间片其他线程都可以去竞争，也就是说都有机会获得当前线程让出的时间片。
     * 而yield()方法只允许与当前线程具有相同优先级的线程能够获得释放出来的CPU时间片。
     */
}
